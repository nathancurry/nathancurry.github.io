<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bind on Nathan Curry</title>
    <link>https://www.nathancurry.com/categories/bind/</link>
    <description>Recent content in Bind on Nathan Curry</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 09 Sep 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.nathancurry.com/categories/bind/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Generating BIND Config From Ansible hostvars</title>
      <link>https://www.nathancurry.com/blog/16-generating-bind-entries-from-ansible-hostvars/</link>
      <pubDate>Sun, 09 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.nathancurry.com/blog/16-generating-bind-entries-from-ansible-hostvars/</guid>
      <description>Since streamlining my container deployment, I&amp;rsquo;ve been working on automating a BIND deployment. I found this excellent role over at MangoLassi.it, and I&amp;rsquo;m tailoring it to my needs.
Generating based on hostvars For now, I&amp;rsquo;m statically mapping IPs, MAC addresses, and a few other machine facts in host_vars, so that I have a defined infrastructure, even when the hosts don&amp;rsquo;t exist.
fqdn: &amp;#39;ns.lan.nathancurry.com&amp;#39; ip_address: &amp;#39;10.3.3.2&amp;#39; mac_address: &amp;#39;52:54:00:76:b4:78&amp;#39; services: [ &amp;#39;dns&amp;#39;, &amp;#39;dhcp&amp;#39; ] This allows me to keep key infrastructure facts in one place.</description>
    </item>
    
  </channel>
</rss>