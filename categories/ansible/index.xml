<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ansible on Nathan Curry</title>
    <link>https://www.nathancurry.com/categories/ansible/</link>
    <description>Recent content in Ansible on Nathan Curry</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 12 Sep 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.nathancurry.com/categories/ansible/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Configuring Time Services With Ansible</title>
      <link>https://www.nathancurry.com/blog/20-configuring-chrony-with-ansible/</link>
      <pubDate>Wed, 12 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.nathancurry.com/blog/20-configuring-chrony-with-ansible/</guid>
      <description>I put together an Ansible role for configuring network time services, using chrony.
This is my most elegant work thus far, though before this is worth packaging, I&amp;rsquo;d like to configure the scripts to test for Debian vs. Red Hat, as well as add variables for a few things.
You can take a look at the relevant git commit here.
Structure Here are the files in this project. A task to call the roles, and a role for master/slave.</description>
    </item>
    
    <item>
      <title>Ansible Role For Local Repo</title>
      <link>https://www.nathancurry.com/blog/19-ansible-role-for-local-repo/</link>
      <pubDate>Tue, 11 Sep 2018 17:00:00 +0000</pubDate>
      
      <guid>https://www.nathancurry.com/blog/19-ansible-role-for-local-repo/</guid>
      <description>I need a local install source and system I can serve kickstart files from. I wrote an Ansible role to accomplish this. The kickstart process will be covered in the next article.
Here is the relevant git commit
Structure files/ # Static files centos7.repo # Sync source local.repo # Repo file for download tasks/ configure_repo.yml # Set up repo in container prepare_host_node.yml # Prepare Proxmox node main.yml # Main script main.</description>
    </item>
    
    <item>
      <title>Ansible Workflow 1: Spin Up DNS/DHCP Failover Pair</title>
      <link>https://www.nathancurry.com/blog/17-ansible-workflow-deploying-dns-dhcp/</link>
      <pubDate>Mon, 10 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.nathancurry.com/blog/17-ansible-workflow-deploying-dns-dhcp/</guid>
      <description>I&amp;rsquo;ve been working on getting the individual pieces put together on this, and I finally have the entire thing working. I&amp;rsquo;ve got a playbook workflow that will deploy two containers, install BIND and ISC DHCPD, and start them.
What it will not do is update DNS automatically. I&amp;rsquo;m able to update the DNS manually with nsupdate, but it appears as though DHCPD isn&amp;rsquo;t even trying. For now, I&amp;rsquo;m moving on, and I will revisit with fresh eyes.</description>
    </item>
    
    <item>
      <title>Generating BIND Config From Ansible hostvars</title>
      <link>https://www.nathancurry.com/blog/16-generating-bind-entries-from-ansible-hostvars/</link>
      <pubDate>Sun, 09 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.nathancurry.com/blog/16-generating-bind-entries-from-ansible-hostvars/</guid>
      <description>Since streamlining my container deployment, I&amp;rsquo;ve been working on automating a BIND deployment. I found this excellent role over at MangoLassi.it, and I&amp;rsquo;m tailoring it to my needs.
Generating based on hostvars For now, I&amp;rsquo;m statically mapping IPs, MAC addresses, and a few other machine facts in host_vars, so that I have a defined infrastructure, even when the hosts don&amp;rsquo;t exist.
fqdn: &amp;#39;ns.lan.nathancurry.com&amp;#39; ip_address: &amp;#39;10.3.3.2&amp;#39; mac_address: &amp;#39;52:54:00:76:b4:78&amp;#39; services: [ &amp;#39;dns&amp;#39;, &amp;#39;dhcp&amp;#39; ] This allows me to keep key infrastructure facts in one place.</description>
    </item>
    
    <item>
      <title>Deploying Infrastructure on Proxmox with Ansible</title>
      <link>https://www.nathancurry.com/blog/14-ansible-deployment-with-proxmox/</link>
      <pubDate>Fri, 07 Sep 2018 18:00:00 +0000</pubDate>
      
      <guid>https://www.nathancurry.com/blog/14-ansible-deployment-with-proxmox/</guid>
      <description>I&amp;rsquo;ve broken down my HomeLab, and I&amp;rsquo;m rebuilding it in Ansible for deployment on a Proxmox cluster.
Configure Proxmox for ansible I&amp;rsquo;ve been working off morph027&amp;rsquo;s workflow for a first successful run. He uses the ansible plugin proxmox_kvm, and I&amp;rsquo;m using proxmox (for containers).
Infrastructure Short and sweet:
[proxmox] gold silver bronze Setup script To get my blood pumping, I wrote a playbook to configure the three nodes:
# install_pip.</description>
    </item>
    
  </channel>
</rss>